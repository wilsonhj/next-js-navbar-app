{"ast":null,"code":"var _jsxFileName = \"/Users/pandoras.box/Developer/React_Apps/next-js/pages/post.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// import { withRouter } from 'next/router';\nimport axios from 'axios';\n\nconst Post = ({\n  id,\n  comments\n}) => __jsx(\"h1\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 36\n  }\n}, \"Post Page #\", id);\n\nPost.getInitialProps = async ({\n  query\n}) => {\n  const res = await axios.get(\"https://jsonplaceholder.typicode.com/comments?postId=3\");\n  const {\n    data\n  } = res;\n  console.log(data[0]);\n  return _objectSpread(_objectSpread({}, query), {}, {\n    comments: data\n  });\n};\n\nexport default Post; // export default withRouter(Post); // withRouter HOC","map":{"version":3,"sources":["/Users/pandoras.box/Developer/React_Apps/next-js/pages/post.js"],"names":["axios","Post","id","comments","getInitialProps","query","res","get","data","console","log"],"mappings":";;;;;;;;;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,EAAF;AAAMC,EAAAA;AAAN,CAAD,KAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAgBD,EAAhB,CAAnC;;AAEAD,IAAI,CAACG,eAAL,GAAuB,OAAO;AAAEC,EAAAA;AAAF,CAAP,KAAqB;AAC1C,QAAMC,GAAG,GAAG,MAAMN,KAAK,CAACO,GAAN,CAAU,wDAAV,CAAlB;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAWF,GAAjB;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAAC,CAAD,CAAhB;AACA,yCAAWH,KAAX;AAAkBF,IAAAA,QAAQ,EAAEK;AAA5B;AACD,CALD;;AAOA,eAAeP,IAAf,C,CACA","sourcesContent":["// import { withRouter } from 'next/router';\nimport axios from 'axios';\n\nconst Post = ({ id, comments }) => <h1>Post Page #{id}</h1>;\n\nPost.getInitialProps = async ({ query }) => {\n  const res = await axios.get(\"https://jsonplaceholder.typicode.com/comments?postId=3\");\n  const { data } = res;\n  console.log(data[0]);\n  return {...query, comments: data}\n}\n\nexport default Post;\n// export default withRouter(Post); // withRouter HOC"]},"metadata":{},"sourceType":"module"}