{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/pandoras.box/Developer/React_Apps/next-js/pages/_app.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// import React from 'react';\n// import App, { Container } from 'next/app';\n// import Navbar from '../components/Navbar';\n// class MyApp extends App {\n//   static async getInitialProps({ Component, ctx }) {\n//     let pageProps = {};\n//     if (Component.getInitialProps){\n//       pageProps = await Component.getInitialProps(ctx);\n//     }\n//     return { pageProps };\n//   }\n//   render() { \n//     const { Component, pageProps } = this.props;\n//     return ( \n//       <Container>\n//         <Navbar></Navbar>\n//         <Component {...pageProps} />\n//         <h1>Fotter</h1>\n//       </Container>\n//     );\n//   }\n// }\n// export default MyApp;\nimport React, { Component } from 'react';\nimport App from 'next/app';\nimport Navbar from '../components/Navbar';\n\nfunction MyApp(_ref) {\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps;\n  return __jsx(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, \"p function _app\"), __jsx(Component, _extends({}, pageProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  })), __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, \"Footer\"));\n} // Only uncomment this method if you have blocking data requirements for\n// every single page in your application. This disables the ability to\n// perform automatic static optimization, causing every page in your app to\n// be server-side rendered.\n\n\n_c = MyApp;\n\nMyApp.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(appContext) {\n    var appProps;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return App.getInitialProps(appContext);\n\n          case 2:\n            appProps = _context.sent;\n            return _context.abrupt(\"return\", _objectSpread({}, appProps));\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default MyApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyApp\");","map":{"version":3,"sources":["/Users/pandoras.box/Developer/React_Apps/next-js/pages/_app.js"],"names":["React","Component","App","Navbar","MyApp","pageProps","getInitialProps","appContext","appProps"],"mappings":";;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAIA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,GAAP,MAAgB,UAAhB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAEA,SAASC,KAAT,OAAyC;AAAA,MAAxBH,SAAwB,QAAxBA,SAAwB;AAAA,MAAbI,SAAa,QAAbA,SAAa;AACvC,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE,MAAC,SAAD,eAAeA,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,CADF;AAOD,C,CAED;AACA;AACA;AACA;;;KAbSD,K;;AAeTA,KAAK,CAACE,eAAN;AAAA,uEAAwB,iBAAOC,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAECL,GAAG,CAACI,eAAJ,CAAoBC,UAApB,CAFD;;AAAA;AAEhBC,YAAAA,QAFgB;AAAA,+DAIVA,QAJU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAAA;AAAA;AAAA;AAAA;;AAOA,eAAeJ,KAAf","sourcesContent":["// import React from 'react';\n// import App, { Container } from 'next/app';\n// import Navbar from '../components/Navbar';\n\n// class MyApp extends App {\n//   static async getInitialProps({ Component, ctx }) {\n//     let pageProps = {};\n//     if (Component.getInitialProps){\n//       pageProps = await Component.getInitialProps(ctx);\n//     }\n//     return { pageProps };\n//   }\n//   render() { \n//     const { Component, pageProps } = this.props;\n//     return ( \n//       <Container>\n//         <Navbar></Navbar>\n//         <Component {...pageProps} />\n//         <h1>Fotter</h1>\n//       </Container>\n//     );\n//   }\n// }\n\n// export default MyApp;\n\n\n\nimport React, {Component} from 'react';\nimport App from 'next/app';\nimport Navbar from '../components/Navbar';\n\nfunction MyApp({ Component, pageProps }) {\n  return (\n    <Navbar>\n      <p>p function _app</p>\n      <Component {...pageProps} />\n      <h1>Footer</h1>\n    </Navbar>\n  );\n}\n\n// Only uncomment this method if you have blocking data requirements for\n// every single page in your application. This disables the ability to\n// perform automatic static optimization, causing every page in your app to\n// be server-side rendered.\n\nMyApp.getInitialProps = async (appContext) => {\n  // calls page's `getInitialProps` and fills `appProps.pageProps`\n  const appProps = await App.getInitialProps(appContext);\n\n  return { ...appProps }\n}\n\nexport default MyApp;"]},"metadata":{},"sourceType":"module"}