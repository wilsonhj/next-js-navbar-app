{"ast":null,"code":"var _jsxFileName = \"/Users/pandoras.box/Developer/React_Apps/next-js/pages/_app.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n// import React from 'react';\n// import App, { Container } from 'next/app';\n// import Navbar from '../components/Navbar';\n// class MyApp extends App {\n//   static async getInitialProps({ Component, ctx }) {\n//     let pageProps = {};\n//     if (Component.getInitialProps){\n//       pageProps = await Component.getInitialProps(ctx);\n//     }\n//     return { pageProps };\n//   }\n//   render() { \n//     const { Component, pageProps } = this.props;\n//     return ( \n//       <Container>\n//         <Navbar></Navbar>\n//         <Component {...pageProps} />\n//         <h1>Fotter</h1>\n//       </Container>\n//     );\n//   }\n// }\n// export default MyApp;\nimport React, { Component } from 'react';\nimport App from 'next/app';\nimport Navbar from '../components/Navbar';\n\nfunction MyApp({\n  Component,\n  pageProps\n}) {\n  return __jsx(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, \"p function _app\"), __jsx(Component, _extends({}, pageProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  })), __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, \"Footer\"));\n} // Only uncomment this method if you have blocking data requirements for\n// every single page in your application. This disables the ability to\n// perform automatic static optimization, causing every page in your app to\n// be server-side rendered.\n\n\nMyApp.getInitialProps = async appContext => {\n  // calls page's `getInitialProps` and fills `appProps.pageProps`\n  const appProps = await App.getInitialProps(appContext);\n  return _objectSpread({}, appProps);\n};\n\nexport default MyApp;","map":{"version":3,"sources":["/Users/pandoras.box/Developer/React_Apps/next-js/pages/_app.js"],"names":["React","Component","App","Navbar","MyApp","pageProps","getInitialProps","appContext","appProps"],"mappings":";;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAIA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,GAAP,MAAgB,UAAhB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAEA,SAASC,KAAT,CAAe;AAAEH,EAAAA,SAAF;AAAaI,EAAAA;AAAb,CAAf,EAAyC;AACvC,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE,MAAC,SAAD,eAAeA,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,CADF;AAOD,C,CAED;AACA;AACA;AACA;;;AAEAD,KAAK,CAACE,eAAN,GAAwB,MAAOC,UAAP,IAAsB;AAC5C;AACA,QAAMC,QAAQ,GAAG,MAAMN,GAAG,CAACI,eAAJ,CAAoBC,UAApB,CAAvB;AAEA,2BAAYC,QAAZ;AACD,CALD;;AAOA,eAAeJ,KAAf","sourcesContent":["// import React from 'react';\n// import App, { Container } from 'next/app';\n// import Navbar from '../components/Navbar';\n\n// class MyApp extends App {\n//   static async getInitialProps({ Component, ctx }) {\n//     let pageProps = {};\n//     if (Component.getInitialProps){\n//       pageProps = await Component.getInitialProps(ctx);\n//     }\n//     return { pageProps };\n//   }\n//   render() { \n//     const { Component, pageProps } = this.props;\n//     return ( \n//       <Container>\n//         <Navbar></Navbar>\n//         <Component {...pageProps} />\n//         <h1>Fotter</h1>\n//       </Container>\n//     );\n//   }\n// }\n\n// export default MyApp;\n\n\n\nimport React, {Component} from 'react';\nimport App from 'next/app';\nimport Navbar from '../components/Navbar';\n\nfunction MyApp({ Component, pageProps }) {\n  return (\n    <Navbar>\n      <p>p function _app</p>\n      <Component {...pageProps} />\n      <h1>Footer</h1>\n    </Navbar>\n  );\n}\n\n// Only uncomment this method if you have blocking data requirements for\n// every single page in your application. This disables the ability to\n// perform automatic static optimization, causing every page in your app to\n// be server-side rendered.\n\nMyApp.getInitialProps = async (appContext) => {\n  // calls page's `getInitialProps` and fills `appProps.pageProps`\n  const appProps = await App.getInitialProps(appContext);\n\n  return { ...appProps }\n}\n\nexport default MyApp;"]},"metadata":{},"sourceType":"module"}